{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["import { BrowserWindow, app, ipcMain, dialog, shell, ipcRenderer } from 'electron'\nimport { join, dirname } from 'path'\nimport * as fs from 'fs'\n\nconst main = () => {\n    onReady()\n    appListens()\n}\n\nconst onReady = () => {\n    app.whenReady().then(() => {\n        const mainWindow = createWindow()\n        mainWindowListens(mainWindow)\n    })\n}\n\nconst mainWindowListens = (mainWindow: BrowserWindow) => {\n\n    ipcMain.on('minimize', () => mainWindow.minimize())\n    ipcMain.on('maximize', () => mainWindow.maximize())\n    ipcMain.on('unmaximize', () => mainWindow.unmaximize())    \n    ipcMain.on('close', () => mainWindow.close())\n    ipcMain.on('to-close', event => event.reply('to-check-if-be-saved'))\n\n    ipcMain.on('open-file-dialog', async (event) => {\n        try {\n            const result = await dialog.showOpenDialog({\n                properties: ['openFile'],\n                filters: [{ name: 'Markdown Files', extensions: ['md', 'markdown'] }],\n            })\n            event.reply('open-file-dialog-reply', result)\n        } catch (error) {\n            console.error('Error opening file dialog:', error)\n            event.reply('open-file-dialog-reply', { error: error.message })\n        }\n    })\n    \n    ipcMain.on('open-file', async (event, filePath) => {\n        try {\n            const fileContent = await fs.promises.readFile(filePath, 'utf-8')\n            event.reply('file-content', filePath, dirname(filePath), fileContent)\n        } catch (error) {\n            event.reply('file-error', error.message)\n        }\n    })\n\n    ipcMain.on('save-file-dialog', async (event, contentToSave) => {\n        try {\n            const result = await dialog.showSaveDialog({\n                properties: ['createDirectory'],\n                filters: [{ name: 'Markdown Files', extensions: ['md', 'markdown'] }],\n            })\n    \n            if (!result.canceled) {\n                await fs.promises.writeFile(result.filePath as fs.PathLike, contentToSave, 'utf-8')\n                event.reply('save-file-dialog-reply', { filePath: result.filePath })\n            } else {\n                event.reply('save-file-dialog-reply', { canceled: true })\n            }\n        } catch (error) {\n            console.error('Error saving file:', error)\n            event.reply('save-file-dialog-reply', { error: error.message })\n        }\n    })\n    \n    ipcMain.on('save-file', async (event, { filePath, contentToSave }) => {\n        try {\n            await fs.promises.writeFile(filePath, contentToSave, 'utf-8')\n            event.reply('file-saved', filePath, dirname(filePath))\n        } catch (error) {\n            console.error('Error saving file:', error)\n            event.reply('file-save-error', { error: error.message })\n        }\n    })\n    \n    ipcMain.on('save-as-file-dialog', async (event, contentToSave) => {\n        try {\n            const result = await dialog.showSaveDialog({\n                properties: ['createDirectory'],\n                filters: [{ name: 'Markdown Files', extensions: ['md', 'markdown'] }],\n            })\n    \n            if (!result.canceled) {\n                await fs.promises.writeFile(result.filePath as fs.PathLike, contentToSave, 'utf-8')\n                event.reply('save-as-file-dialog-reply', { filePath: result.filePath })\n            } else {\n                event.reply('save-as-file-dialog-reply', { canceled: true })\n            }\n        } catch (error) {\n            console.error('Error saving file as:', error)\n            event.reply('save-as-file-dialog-reply', { error: error.message })\n        }\n    })\n}\n\nconst createWindow = () => {\n    const win = new BrowserWindow({\n        width: 800,\n        height: 600,\n        transparent: true,\n        resizable: true,\n        frame: false,\n        titleBarStyle: 'hidden',\n        webPreferences: {\n            webSecurity: false,\n            nodeIntegration: true,\n            preload: join(__dirname, 'preload.js')\n        }\n    })\n    const path = join(__dirname, 'app', 'index.html')\n    win.loadFile(path)\n    return win\n}\n\nconst appListens = () => {\n    app.on('window-all-closed', () => {\n        if (process.platform !== 'darwin')\n            app.quit()\n    })\n    app.on('activate', () => {\n        if (BrowserWindow.getAllWindows().length === 0)\n            createWindow()\n    })\n    app.on('web-contents-created', (e, webContents) => {\n        webContents.on('will-navigate', (event, url) => {\n            event.preventDefault()\n            shell.openExternal(url)\n        })\n    })\n}\n\nmain()\n\n"],
  "mappings": "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",
  "names": []
}
